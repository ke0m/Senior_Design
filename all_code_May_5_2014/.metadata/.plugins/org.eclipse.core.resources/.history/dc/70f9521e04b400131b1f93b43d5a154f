'''
Created on Mar 24, 2014

@author: Joseph Jennings
'''


from java.awt import *
from java.lang import *
from java.nio import *
from javax.swing import *
from java.util import *


from edu.mines.jtk.awt import *
from edu.mines.jtk.dsp import *
from edu.mines.jtk.io import *
from edu.mines.jtk.mosaic import *
from edu.mines.jtk.util.ArrayMath import *

from tensors import *


n1 = 128;
n2 = 128;

r = zerofloat(n1,n2)
sc = zerofloat(n1,n2)
sg = zerofloat(n1,n2)

random = Random()

for i in range(n1):
    for j in range(n2):
        r[i][j] = random.nextFloat();


##### A Simple Smoothing test using Jython
kernel = LocalDiffusionKernel(LocalDiffusionKernel.Stencil.D22CL)
smooth_gpu = LocalSmoothingFilter(0.01, 100, kernel)
smooth_cpu = LocalSmoothingFilter()


smooth_gpu.apply(20,r, sg)
smooth_gpu.applySmoothS(sg, sg)

smooth_cpu.apply(20, r, sc) # The first argument of the method apply is the the Tensors2 variable
smooth_cpu.applySmoothS(sc, sc)


#####Now attepting to Smooth the proveid seismic image#####





#######Plotting the smoothed images#######
spc = SimplePlot()
spg = SimplePlot()

spg.addPixels(sg)
spg.setTitle("Smoothed Image - GPU")

spc.addPixels(sc)
spc.setTitle("Smoothed Image - CPU")


        
        
    
    
    
    
    